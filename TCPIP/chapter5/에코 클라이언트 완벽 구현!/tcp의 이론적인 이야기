TCP 소켓에 존재하는 입출력 버퍼
	write 함수가 호출되는 순간 데이터는 출력버퍼로 이동을 하고, read 함수가 호출되는 순간 입력버퍼에 저장된 데이터를 읽어들이게 된다.

	- 입출력 버퍼는 TCP 소켓 각각에 대해 별도로 존재한다.
	- 입출력 버퍼는 소켓 생성시 자동으로 생성된다.
	- 소켓을 닫아도 출력버퍼에 남아있는 데이터는 계속해서 전송이 이뤄진다.
	- 소켓을 닫으면 입력버퍼에 남아있는 데이터는 소멸되어 버린다.

	이와같은 버퍼가 존재하고 TCP는 데이터의 흐름까지 컨트롤하기 때문에 데이터의 '슬라이싱 윈도우 프로토콜'의 적용이 가능하고,
	이로인해 버퍼가 차고 넘치는 상황은 발생하지 않는다.


TCP의 내부 동작원리1: 상대 소켓과의 연결

	TCP 소켓의 생성에서 소멸의 과정까지 거치게 되는 일을 크게 나누면
		- 상대 소켓과의 연결
		- 상대 소켓과의 데이터 송수신
		- 상대 소켓과의 연결 종료

	실제로 TCP 소켓은 연결설정 과정에서 총 세 번의 대화를 주고 받는다.
	그래서 이를 가리켜 Three-way-handshaking이라 한다.

	소켓은 전 이중 방식으로 동작하므로 양방향으로 데이터를 주고받을 수 있다.
	따라서 데이터 송수신에 앞서 준비과정이 필요하다.

	처음 연결요청에 사용되는 메시지를 가리켜 SYN(동기화 메세지.synchronization)이라 한다.

	ACK번호를 전송된 바이트의 크기만큼 추가로 증가시키지 않으면, 패킷의 전송은 확인할 수 있을지 몰라도, 패킷에 담긴 100바이트가 전부 전송되었는지,
	아니면 그 중 일부가 손실되고 80바이트만 전송되었는지 알 수 없다.

		ACK번호 -> SEQ 번호 + 전송된 바이트 크기 + 1

	SEQ전송 시 타이머가 작동하고, 그리고 SEQ에 대한 ACK가 전송되지 않을 경우 데이터를 재전송한다.

	연결종료는 패킷 안에 삽입되어 있는 FIN은 종료를 알리는 메시지를 뜻한다.
	즉, 상호간에 FIN메시지를 한번씩 주고 받고서 연결이 종료되는데,
	이 과정이 네 단계에 걸쳐서 진행되기 떄문에 이를 가리켜 Four-way-handshaking이라고 부른다.

	

	